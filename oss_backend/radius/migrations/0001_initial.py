# Generated by Django 5.2.1 on 2025-05-17 08:12

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('nas', '0001_initial'),
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthAttributeGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Group Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('is_system', models.BooleanField(default=False, help_text='System groups cannot be deleted', verbose_name='System Group')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'Auth Attribute Group',
                'verbose_name_plural': 'Auth Attribute Groups',
                'db_table': 'radius_auth_attribute_group',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='RadiusAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vendor_id', models.PositiveIntegerField(default=0, help_text='0 for standard attributes', verbose_name='Vendor ID')),
                ('attribute_id', models.PositiveIntegerField(verbose_name='Attribute ID')),
                ('attribute_name', models.CharField(max_length=255, verbose_name='Attribute Name')),
                ('attribute_type', models.CharField(choices=[('string', 'String'), ('integer', 'Integer'), ('ipaddr', 'IP Address'), ('date', 'Date'), ('octets', 'Octets')], max_length=20, verbose_name='Attribute Type')),
                ('attribute_value', models.CharField(max_length=255, verbose_name='Attribute Value')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attributes', to='radius.authattributegroup', verbose_name='Attribute Group')),
            ],
            options={
                'verbose_name': 'RADIUS Attribute',
                'verbose_name_plural': 'RADIUS Attributes',
                'db_table': 'radius_radius_attribute',
                'ordering': ['vendor_id', 'attribute_id'],
                'unique_together': {('group', 'vendor_id', 'attribute_id')},
            },
        ),
        migrations.CreateModel(
            name='UserNasRelationship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('attribute_overrides', models.JSONField(blank=True, default=dict, help_text='User-specific attribute values that override group values', verbose_name='Attribute Overrides')),
                ('attribute_group', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='user_nas_relationships', to='radius.authattributegroup', verbose_name='Auth Attribute Group')),
                ('nas', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_relationships', to='nas.nas', verbose_name='NAS Device')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nas_relationships', to='users.user', verbose_name='User')),
            ],
            options={
                'verbose_name': 'User-NAS Relationship',
                'verbose_name_plural': 'User-NAS Relationships',
                'db_table': 'radius_user_nas_relationship',
                'unique_together': {('user', 'nas')},
            },
        ),
    ]
