# Generated by Django 5.2.1 on 2025-05-17 10:00

from django.db import migrations


def create_default_admin_group_and_user(apps, schema_editor):
    """
    Create default admin group and admin user.
    """
    # Get the models
    AdminGroup = apps.get_model('admin_users', 'AdminGroup')
    AdminUser = apps.get_model('admin_users', 'AdminUser')

    # Create default admin group
    full_group, created = AdminGroup.objects.get_or_create(
        name="Full",
        defaults={
            'description': "Full administrative access"
        }
    )

    # Create default admin user if it doesn't exist
    if not AdminUser.objects.filter(username='admin').exists():
        admin_user = AdminUser.objects.create_superuser(
            username='admin',
            email='admin@example.com',
            password='admin',
            is_active=True,
            is_staff=True,
            is_superuser=True
        )

        # Add admin user to Full group
        admin_user.groups.add(full_group)


def reverse_default_admin_group_and_user(apps, schema_editor):
    """
    Reverse the creation of default admin group and admin user.
    """
    # Get the models
    AdminGroup = apps.get_model('admin_users', 'AdminGroup')
    AdminUser = apps.get_model('admin_users', 'AdminUser')

    # Delete default admin user
    AdminUser.objects.filter(username='admin').delete()

    # Delete default admin group
    AdminGroup.objects.filter(name='Full').delete()


class Migration(migrations.Migration):

    dependencies = [
        ('admin_users', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(
            create_default_admin_group_and_user,
            reverse_default_admin_group_and_user
        ),
    ]